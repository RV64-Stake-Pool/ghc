
==================== Tidy Core ====================
Result size of Tidy Core = {terms: 54, types: 101, coercions: 0, joins: 0/0}

Rec {
-- RHS size: {terms: 20, types: 31, coercions: 0, joins: 0/0}
T18401.safeInit_$spoly_$wgo2 :: forall {a}. a -> [a] -> (# Bool, [a] #)
T18401.safeInit_$spoly_$wgo2
  = \ (@a_aPH) (sc_s18c :: a_aPH) (sc1_s18b :: [a_aPH]) ->
      case sc1_s18b of {
        [] -> (# GHC.Types.True, GHC.Types.[] @a_aPH #);
        : y_a15k ys_a15l -> (# GHC.Types.True, GHC.Types.: @a_aPH sc_s18c (case T18401.safeInit_$spoly_$wgo2 @a_aPH y_a15k ys_a15l of { (# ww_s17O, ww1_s17P #) -> ww1_s17P }) #)
      }
end Rec }

-- RHS size: {terms: 17, types: 25, coercions: 0, joins: 0/0}
si :: forall a. [a] -> (Bool, [a])
si
  = \ (@a_s17w) (xs0_s17x :: [a_s17w]) ->
      case xs0_s17x of {
        [] -> (GHC.Types.False, GHC.Types.[] @a_s17w);
        : y_a15k ys_a15l -> (GHC.Types.True, case T18401.safeInit_$spoly_$wgo2 @a_s17w y_a15k ys_a15l of { (# ww_s17O, ww1_X3 #) -> ww1_X3 })
      }

-- RHS size: {terms: 14, types: 22, coercions: 0, joins: 0/0}
safeInit :: forall a. [a] -> Maybe [a]
safeInit
  = \ (@a_aPH) (xs_auC :: [a_aPH]) ->
      case xs_auC of {
        [] -> GHC.Maybe.Nothing @[a_aPH];
        : y_a15k ys_a15l -> GHC.Maybe.Just @[a_aPH] (case T18401.safeInit_$spoly_$wgo2 @a_aPH y_a15k ys_a15l of { (# ww_s17O, ww1_X3 #) -> ww1_X3 })
      }



